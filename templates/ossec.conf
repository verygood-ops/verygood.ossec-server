<ossec_config>
  
  <global>
    <jsonout_output>yes</jsonout_output>
    <alerts_log>yes</alerts_log>
    {% if ossec_email_to is defined %}
    <email_notification>yes</email_notification>
    <email_to>{{ossec_email_to}}</email_to>
    <smtp_server>{{ossec_smtp_server}}</smtp_server>
    <email_from>{{ossec_email_from}}</email_from>
    {% endif %}
  </global>

  <alerts>
    <log_alert_level>{{ossec_alerts_log_alert_level}}</log_alert_level>
    <email_alert_level>{{ossec_alerts_email_alert_level}}</email_alert_level>
  </alerts>

  <remote>
    <connection>syslog</connection>
    <port>514</port>
    <protocol>udp</protocol>
  </remote>

  <remote>
    <connection>secure</connection>
    <port>1514</port>
    <protocol>udp</protocol>
  </remote>

  <!-- Policy monitoring -->
  <rootcheck>
    <rootkit_files>{{ossec_rootcheck_rootkit_files}}</rootkit_files>
    <rootkit_trojans>{{ossec_rootcheck_rootkit_trojans}}</rootkit_trojans>
    {% for system_audit in ossec_rootcheck_system_audit %}
    <system_audit>{{system_audit}}</system_audit>
    {% endfor %}
  </rootcheck>

  <wodle name="open-scap">
    <disabled>yes</disabled>
    <timeout>1800</timeout>
    <interval>1d</interval>
    <scan-on-start>yes</scan-on-start>

    <content type="xccdf" path="ssg-debian-8-ds.xml">
      <profile>xccdf_org.ssgproject.content_profile_common</profile>
    </content>
    <content type="oval" path="cve-debian-oval.xml"/>
  </wodle>  

  <!-- File integrity monitoring -->
  <syscheck>
    <frequency>{{ossec_syscheck_frequency}}</frequency>
    
    {% for directories in ossec_syscheck_directories %}
    <directories check_all="{{ "yes" if directories.check_all else "no" }}">{{directories.directories}}</directories>
    {% endfor %}

    {% for ignore in ossec_syscheck_ignore_directories %}
    <ignore>{{ignore}}</ignore>
    {% endfor %}
    <!-- Check the file, but never compute the diff -->
    <nodiff>/etc/ssl/private.key</nodiff>    
  </syscheck>
  
  <!-- Active response -->
  <global>
    {% for white_list in ossec_global_white_lists %}
    <white_list>{{white_list}}</white_list>
    {% endfor %}
  </global>

  {% for command in ossec_commands %}
  <command>
    <name>{{command.name}}</name>
    <executable>{{command.executable}}</executable>
    <expect>{{command.expect}}</expect>
    <timeout_allowed>{{ "yes" if command.timeout_allowed else "no" }}</timeout_allowed>
  </command>
  {% endfor %}

  {% for response in ossec_active_responses %}
  <active-response>
    <command>{{response.command}}</command>
    <location>{{response.location}}</location>
    <level>{{response.level}}</level>
    <timeout>{{response.timeout|default(omit)}}</timeout>
  </active-response>
  {% endfor %}                  

  {% for localfile in ossec_localfile %}
  <localfile>
    <log_format>{{localfile.log_format}}</log_format>
    <location>{{localfile.location}}</location>
  </localfile>
  {% endfor %}

  {% for local_command in ossec_local_commands %}
  <localfile>
    <log_format>{{local_command.log_format}}</log_format>
    <command>{{local_command.command}}</command>
  </localfile>
  {% endfor %}

  <ruleset>
    <!-- Default ruleset -->
    <decoder_dir>ruleset/decoders</decoder_dir>
    <rule_dir>ruleset/rules</rule_dir>
    <rule_exclude>0215-policy_rules.xml</rule_exclude>
    <list>etc/lists/audit-keys</list>

    <!-- User-defined ruleset -->
    <decoder_dir>etc/decoders</decoder_dir>
    <rule_dir>etc/rules</rule_dir>
  </ruleset>
  
</ossec_config>
