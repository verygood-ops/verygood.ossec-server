---
- name: install required packages
  apt:
    name: build-essential
    update_cache: yes

- name: remove ossec-wazuh folder if exists
  file:
    path=/opt/ossec-wazuh
    state=absent

- name: get ossec-wazuh package
  get_url: url="{{ ossec_url }}/v{{ ossec_version }}.tar.gz" dest=/opt/ossec-wazuh.tar.gz

- name: unarchive ossec-wazuh package
  unarchive: src=/opt/ossec-wazuh.tar.gz dest=/opt/ remote_src=yes

  # Wazuh hardcoded version into folder name
- name: move directory
  command: mv /opt/wazuh-"{{ossec_version}}" /opt/ossec-wazuh

- name: copy preloaded var file
  template:
    src=install-preloaded-vars.conf
    dest=/opt/ossec-wazuh/etc/preloaded-vars.conf

- name: install ossec-wazuh
  shell: cd /opt/ossec-wazuh && ./install.sh

- name: Generate self-signed cert
  command: openssl req -new -newkey rsa:4096 -days 10000 -nodes -subj "/" -x509 -keyout /var/ossec/etc/sslmanager.key -out /var/ossec/etc/sslmanager.cert

# ossec-remoted won't run unless there's a record for a client.
# We will add a record that allows connections from 127.0.0.1
- name: Add keepalive client.keys
  copy:
    src=client.keys
    dest=/var/ossec/etc
    owner=root
    group=ossec
    mode=440

- name: copy ossec.conf
  template:
    src=ossec.conf
    dest=/var/ossec/etc/ossec.conf
    owner=root
    group=ossec

- name: enable auth
  shell: /var/ossec/bin/ossec-control enable auth
  notify:
    - restart wazuh-manager 

- name: add update ruleset cronjob
  cron:
    name: OSSEC Ruleset Update
    job: cd /var/ossec/bin && ./update_ruleset.py -r
    special_time: "{{ ossec_ruleset_update_period }}"
  when: ossec_allow_ruleset_update
